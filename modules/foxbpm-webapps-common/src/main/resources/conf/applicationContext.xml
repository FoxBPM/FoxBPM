<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
xmlns:mvc="http://www.springframework.org/schema/mvc"

xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
         http://www.springframework.org/schema/tx 
         http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
	<!-- 配置文件加载 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:/conf/jdbc.properties" />
	</bean>
	
	<bean id="jsonConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
	  <property name="supportedMediaTypes" value="application/json" />
	</bean>
	<!-- foxbpm数据源 -->
	<!-- <bean id="foxbpmDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${idbase.driverClassName}" />
		<property name="url" value="${idbase.url}" />
		<property name="username" value="${idbase.username}" />
		<property name="password" value="${idbase.password}" />
	</bean> -->
	<bean id="foxbpmDataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${idbase.driverClassName}" />
		<property name="jdbcUrl" value="${idbase.url}" />
		<property name="user" value="${idbase.username}" />
		<property name="password" value="${idbase.password}" />
		 <!--连接池中保留的最大连接数。默认值: 15 -->   
          <property name="maxPoolSize" value="100"/>  
          <!-- 连接池中保留的最小连接数，默认为：3-->  
          <property name="minPoolSize" value="50"/>  
          <!-- 初始化连接池中的连接数，取值应在minPoolSize与maxPoolSize之间，默认为3-->  
          <property name="initialPoolSize" value="2"/>  
          <!--最大空闲时间，60秒内未使用则连接被丢弃。若为0则永不丢弃。默认值: 0 -->   
          <property name="maxIdleTime" value="60"/>  
          <!-- 当连接池连接耗尽时，客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException，如设为0则无限期等待。单位毫秒。默认: 0 -->   
          <property name="checkoutTimeout" value="3000"/>  
          <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。默认值: 3 -->   
          <property name="acquireIncrement" value="2"/>  
         <!--定义在从数据库获取新连接失败后重复尝试的次数。默认值: 30 ；小于等于0表示无限次-->   
          <property name="acquireRetryAttempts" value="0"/>  
          <!--重新尝试的时间间隔，默认为：1000毫秒-->   
          <property name="acquireRetryDelay" value="1000" />  
          <!--关闭连接时，是否提交未提交的事务，默认为false，即关闭连接，回滚未提交的事务 -->   
          <property name="autoCommitOnClose" value="false"/> 
          <!--c3p0将建一张名为Test的空表，并使用其自带的查询语句进行测试。如果定义了这个参数那么属性preferredTestQuery将被忽略。你不能在这张Test表上进行任何操作，它将只供c3p0测试使用。默认值: null -->   
          <property name="automaticTestTable" value="Test"/>  
          <!--如果为false，则获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常，但是数据源仍有效保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试获取连接失败后该数据源将申明已断开并永久关闭。默认: false-->   
          <property name="breakAfterAcquireFailure" value="false"/>  
          <!--每60秒检查所有连接池中的空闲连接。默认值: 0，不检查 -->   
          <property name="idleConnectionTestPeriod" value="60"/>  
          <!--c3p0全局的PreparedStatements缓存的大小。如果maxStatements与maxStatementsPerConnection均为0，则缓存不生效，只要有一个不为0，则语句的缓存就能生效。如果默认值: 0-->   
          <property name="maxStatements" value="100"/>  
          <!--maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。默认值: 0 -->   
          <property name="maxStatementsPerConnection" value="0"/> 
		
	</bean>
	
	<!-- 使用jdbcTemplate -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref local="foxbpmDataSource" />
		</property>
	</bean>
	
	<!-- Jpa Entity Manager 配置 -->
    
     <!-- Jpa Entity Manager 配置 -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="foxbpmDataSource"/>
        <property name="jpaVendorAdapter" ref="eclipselinkJpaVendorAdapter"/>
        <property name="packagesToScan" value="org.foxbpm.portal"/>
        <property name="jpaProperties">
            <props>
            	
            	<prop key="eclipselink.weaving">false</prop>
                <prop key="eclipselink.show_sql">true</prop>
                <prop key="eclipselink.logging.parameters">true</prop>
                <prop key="eclipselink.logging.level">FINE</prop>
                <prop key="eclipselink.logging.level.sql">FINE</prop>
                <prop key="eclipselink.orm.throw.exceptions">true</prop>
                <prop key="eclipselink.cache.shared.default">false</prop>
            </props>
        </property>
    </bean>
    
	<bean id="eclipselinkJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter"/>

    <!-- Jpa 事务配置 -->
    <bean id="foxbpmTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>
    
	<bean id="springLoadHelper" class="org.foxbpm.rest.common.api.SpringLoadHelper"></bean>

	<!-- 流程引擎配置 -->
	<bean id="processEngineConfigurationSpring"
		class="org.foxbpm.engine.spring.ProcessEngineConfigurationSpring">
		<property name="dataSource" ref="foxbpmDataSource" />
		<property name="transactionManager" ref="foxbpmTransactionManager" />
		<property name="connectorMenuPath" value="conf/CustomConnectorMenu.xml"></property>
		<property name="configXmlPath" value="conf/foxbpmconfig.xml"></property>
	</bean>
	
	

	<!-- 流程引擎 -->
	<bean id="processEngine" class="org.foxbpm.engine.spring.ProcessEngineFactoryBean">
		<property name="processEngineConfiguration" ref="processEngineConfigurationSpring" />
	</bean>

	<!-- 任务服务 -->
	<bean id="taskService" factory-bean="processEngine"
		factory-method="getTaskService" />
	<!-- 模型服务 -->
	<bean id="modelService" factory-bean="processEngine"
		factory-method="getModelService" />
	<!-- 运行时服务 -->
	<bean id="runtimeService" factory-bean="processEngine"
		factory-method="getRuntimeService" />
	<!-- 运行时服务 -->
	<bean id="identityService" factory-bean="processEngine"
		factory-method="getIdentityService" />

	<bean id="abstrJdbcTemplate" abstract="true">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>
	<!-- 事务通知 -->
	<tx:advice id="foxbpmTransactionAdvice" transaction-manager="foxbpmTransactionManager">
		<tx:attributes>
			<tx:method name="apply*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	
	<bean id="foxbpmUserInterceptor" class="org.foxbpm.portal.interceptor.FoxbpmUserInterceptor" />
	<!-- aop配置 -->
	<aop:config>
		<!-- 事物切入点 -->
		<aop:pointcut id="txPointcut"
			expression="execution(* org.foxbpm.portal.service..*.*(..))" />
		<aop:pointcut id="userPointcut"
			expression="execution(* org.foxbpm.engine.TaskService.*(..))" />
		<aop:advisor advice-ref="foxbpmTransactionAdvice"
			pointcut-ref="txPointcut" />
		<aop:advisor advice-ref="foxbpmUserInterceptor"
			pointcut-ref="userPointcut" />
	</aop:config>
</beans> 
